#summary Basic installation instructions for developers.
#labels Featured,Phase-Implementation

= Introduction =

These instructions are pretty high level right now, so we'll want to nail it down to a more easily repeatable set of instructions, but we had to start somewhere! 

= Details =

==Java 6==

We start by installing the latest version of [http://www.oracle.com/technetwork/java/javase/downloads/ Java 6 SE] available. It appears that these days you just need the JRE. The version tested here was 6.0.26.

Because of the sophisticated encryption we use, you'll need the Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files installed in your jre/lib/security folder. Note that encryption entails issues with the U.S. government's misguided and impractical export rules.

==Browsers==

You can test as you see fit, but we're basically running the latest releases of Firefox, IE, Chrome, Safari and Opera. Earlier versions likely work, but with a Web 2.0 interface, a modern browser is best and fastest.

==Cygwin==

We use [http://www.cygwin.com Cygwin on Windows] so we have a Unix/Linux-like environment for our shell scripts. We actually use very few since we only develop on Windows and have never deployed in production on Windows (though it certainly should be doable), but the scripts for DB setup and the like are still driven by shell scripts.  Generally, the standard install works well for our needs. 

Of course, those on Linux/Unix don't need to worry about this.

==Apache Tomcat==

For testing, we generally run Tomcat from Eclipse, so it's best to download and install Tomcat next. If you plan on running Tomcat as a Windows service, there's a special installer for it. But we just download the ZIP file and really only run it via Eclipse, extracting to C:\Program Files. The version tested here was 7.0.14.

==Eclipse==

Install the latest version of [http://www.eclipse.org] Eclipse IDE for Java EE] developers.  The version tested here is Helios. We extract all to c:\Program Files.  We set our workspace to c:\project.

Install the [http://vaadin.com/eclipse Vaadin Eclipse Plugin] as instructed on their site.

We find that for debugging on your local computer, it's nice to be able to make changes without having the webapp reload, which you can often do because of the hotspot code changes Java allows.  Open the view "Servers" -- if the "tab" is not shown at the bottom of your edit area along with Problems, Console, Error, History, etc., you can use the Window->Show View->Other to pick Servers.  Double-click your server (named Tomcat v6.0 Server at localhost or whatever version you are using) so you display the Overiew and Modules "tabs". Click on Modules, then for your project (/open-eSignFormsVaadin for us) click the Edit button to uncheck the 'Auto reloading enabled'. 

==Building Open eSignForms Using Eclipse==

Create the Vaadin Eclipse project by downloading the code from CVS, project open-eSignFormsVaadin.

{{{:pserver:cvsanon@open.esignforms.com:/home/cvs}}}

If you have edit/commit permission, you'll need a user account and password with SSH access to CVS with something like:

{{{:extssh:USERNAME@open.esignforms.com:/home/cvs}}}

It seems from a fresh install that you'll want to right click on the open-eSignFormsVaadin project, click on Properties, click on Vaadin, and even though it may show the current Vaadin JAR (6.6.1 at this time), you should do a download and APPLY to get it put into the Eclipse area where the GWT JARs are also stored.

(If you plan to do any VaadinCKEditor project work, not necessary for Open eSignForms itself, you'll need to install a subversion plugin -- we use Subversive SVN Team Provider from the Helios installation location and we selected the SVN Kit 1.3.5. That project is hosted on Google Code.)

You will need to compile the Vaadin widgets before testing.

Eclipse should automatically compile all of the regular code into the 'WebContent/WEB-INF/classes' folder.

==Passwords==

The standard JAR Open eSignForms is delivered with should include the .class and .java source files that go with it.

There are also several *.properties files with passwords in them. For testing, these work out of the box, but of course in a production setting, you'll want to copy these individual .properties files into the WEB-INF/classes folder so they can have better values specified.

openesignforms.properties - Sets the two boot passwords to 'test1' and 'test2' respectively.  These values must match the values given to DbSetup when a new system is deployed.

connectionpools.properties - Sets the database user and password for each deployment. The default user and password is the same for both: esignforms

_Remember, in production, you never want to use such passwords._

==Database using PostgreSQL==

Install PostgreSQL 9 per its usual mechanisms. The version tested here was 9.0.4.

It's just a convention, but we use the DB user 'esignforms' for our admin account, and each 'deployment' (a customer system that has its own webapp and database on the server) uses a 5 character unique name that is used as that application's DB user.  The name is also the base name in the deployment folder for its database tables, log files, etc.

For Windows, the installer defaults to the user 'postgres' so you can add our DB user with commands like (for production, use good passwords, of course):
psql -U postgres
CREATE USER esignforms WITH PASSWORD 'esignforms' SUPERUSER;

Install the 'bin' scripts in the cywgin/Linux-user account.  For Windows, you'll need the .cygwin variants.  All cygwin files typically need to a {{{dos2unix *}}} done on them so they'll run correctly. (See below for Cywin details.)

Create the deployment folder in the home directory (/home/esignforms/deployments) or C:\deployments.  Put the 'templates' folder in there that defines the structure used for each deployment.

Update the ~/profile to point to the locations where all your stuff is. The next time you run cygwin, it should have the new good values.

==Create the database==

Install of the SQL code from 'database/postgresql/ddl' into the 'ddl' folder in your home folder.  We use the 5 letter deployment id for creating the database for a given webapp.
{{{
If you have a previous install and need to wipe it out first, use:
  ./drop_db

To create a DB, use:
  ./create_db
  Please enter the LOWERCASE name for the OpenESF database and user: test          (for testing, we just use 'test' for our deployid and DB user)
  Please enter the password to use for the OpenESF esfapp user test: test          (for testing, we just use the password 'test')
  Type 'y' to create the database.
  Type 'y' to create the tables.
  
  ./rundbsetup
  or
  In Eclipse, create a Java Application (debug configuration) for 'DbSetup' like below and then run it:
    Project: open-eSignFormsVaadin
    Main class: com.esignforms.open.db.tools.DbSetup
    Program Arguments: /open-eSignFormsVaadin
    VM Arguments: -Xmx512m -Desf.deploybase=C:\deployments
    
    When you run it you'll see something like:
Enter setup command (initdb,addsuperuser,setpassword,quit) [quit] : initdb
insertDeployment - Created deployment with id: cf431b3d-32d6-4007-bb55-f5a613c3dd90
Enter boot password 1: test1
Enter boot password 2: test2
insertBootKey - Added new boot key
Added super group: ESF/Group/Deployment/SuperAdmin
Added system admin group: System/Administrator
Added All Users pseudo-group: ESF/Group/AllUsers
Added External Users pseudo-group: ESF/Group/ExternalUsers
createInitialProperties - Updated deployment with global properties id: 55136364-78c9-4101-8dc4-15af717165d8; deployment properties id: d746d7bd-cadc-4488-8cde-7ffdfa34d720
Added template library: ESF/Library/Template

Enter setup command (initdb,addsuperuser,setpassword,quit) [quit] : addsuperuser
Enter super user's email address [our default email] : youremailhere@host.com
Enter super user's first/personal name [Yozons] : YourFirstName
Enter super user's last/family name [Support] : YourLastName
Initial super user password: Test                    (again, we just use 'Test' for our login password on developer test systems)
insertSuperUser - Added new super user: youremailhere@host.com
insertUserIntoSuperGroup - Added new super user: YourFirstName YourLastName <youremailhere@host.com>; to super group: ESF/Group/Deployment/SuperAdmin

Enter setup command (initdb,addsuperuser,setpassword,quit) [quit] : quit
}}}

==Running the Application Eclipse==

Generally for testing in Eclipse, click Debug As->Debug On Server->Apache->Tomcat v7.0 Server. The first time you just need to point it to where you installed Tomcat above.

==Other tools==

While not needed for this particular effort, we recommend PasswordSafe (sourceforge) or something similar so you can remember one great pass phrase and keep your various other passwords unique, so when your bank or the like is hacked, at least the password is not used in other sites that become vulnerable as a result.

We also like OpenOffice for our office productivity.